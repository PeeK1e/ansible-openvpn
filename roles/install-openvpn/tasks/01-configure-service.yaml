---
- name: Get iptables location
  raw: whereis iptables | cut -f 2 -d " "
  register: iptables_location

- name: Fail if iptables is unknown
  fail:
    msg: iptables could not be found, aborting...
  when: iptables_location is undefined or iptables_location.stdout == "\r\n\r\n"

- name: Get EasyRSA
  template:
    src: create-certificate.sh
    dest: /tmp/create-certificate.sh
    owner: root
    mode: 0744

- name: Check if PKI files exist
  stat:
    path: /etc/openvpn/server/easy-rsa/pki
  register: pki_files

- name: Create RSA Certs
  become: true
  raw: /bin/bash /tmp/create-certificate.sh
  when: not pki_files.stat.exists

- name: Create DH Parameters
  template:
    src: etc/openvpn/server/dh-parameter.pem
    dest: /etc/openvpn/server/dh.pem
    owner: root
    mode: 0644
  when: not pki_files.stat.exists

- name: Create basic OpenVPN Server Config
  template:
    src: etc/openvpn/server/openvpn.conf
    dest: /etc/openvpn/server/server.conf
    owner: root
    mode: 0644

- name: Create Client OpenVPN Config
  template:
    src: etc/openvpn/server/client-common.txt
    dest: /etc/openvpn/server/client-common.txt
    owner: root
    mode: 0644

- name: Create net.ipv4 forward Config
  template:
    src: etc/sysctl.d/99-openvpn-forward.conf
    dest: /etc/sysctl.d/99-openvpn-forward.conf
    owner: root
    mode: 0644

- name: Create systemd iptables rules
  template:
    src: etc/systemd/system/openvpn-iptables.service
    dest: /etc/systemd/system/openvpn-iptables.service
    owner: root
    mode: 0644
  when: not enable_host_only_vpn

- name: Enable systemd iptables rules
  systemd:
    name: openvpn-iptables.service
    enabled: yes
    state: reloaded
    daemon_reload: yes
  when: not enable_host_only_vpn